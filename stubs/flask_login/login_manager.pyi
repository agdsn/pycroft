import typing as t
from .config import AUTH_HEADER_NAME as AUTH_HEADER_NAME, COOKIE_DURATION as COOKIE_DURATION, COOKIE_HTTPONLY as COOKIE_HTTPONLY, COOKIE_NAME as COOKIE_NAME, COOKIE_SAMESITE as COOKIE_SAMESITE, COOKIE_SECURE as COOKIE_SECURE, ID_ATTRIBUTE as ID_ATTRIBUTE, LOGIN_MESSAGE as LOGIN_MESSAGE, LOGIN_MESSAGE_CATEGORY as LOGIN_MESSAGE_CATEGORY, REFRESH_MESSAGE as REFRESH_MESSAGE, REFRESH_MESSAGE_CATEGORY as REFRESH_MESSAGE_CATEGORY, SESSION_KEYS as SESSION_KEYS, USE_SESSION_FOR_NEXT as USE_SESSION_FOR_NEXT
from .mixins import AnonymousUserMixin as AnonymousUserMixin
from .signals import session_protected as session_protected, user_accessed as user_accessed, user_loaded_from_cookie as user_loaded_from_cookie, user_loaded_from_request as user_loaded_from_request, user_needs_refresh as user_needs_refresh, user_unauthorized as user_unauthorized
from .utils import decode_cookie as decode_cookie, encode_cookie as encode_cookie, expand_login_view as expand_login_view, make_next_param as make_next_param
from _typeshed import Incomplete

class LoginManager:
    anonymous_user: Incomplete
    login_view: Incomplete
    blueprint_login_views: Incomplete
    login_message: Incomplete
    login_message_category: Incomplete
    refresh_view: Incomplete
    needs_refresh_message: Incomplete
    needs_refresh_message_category: Incomplete
    session_protection: str
    localize_callback: Incomplete
    unauthorized_callback: Incomplete
    needs_refresh_callback: Incomplete
    id_attribute: Incomplete
    def __init__(self, app: Incomplete | None = ..., add_context_processor: bool = ...) -> None: ...
    def setup_app(self, app, add_context_processor: bool = ...) -> None: ...
    def init_app(self, app, add_context_processor: bool = ...) -> None: ...
    def unauthorized(self): ...
    _C = t.TypeVar("_C")
    def user_loader(self, callback: _C) -> _C: ...
    @property
    def user_callback(self): ...
    def request_loader(self, callback): ...
    @property
    def request_callback(self): ...
    def unauthorized_handler(self, callback): ...
    def needs_refresh_handler(self, callback): ...
    def needs_refresh(self): ...
    def header_loader(self, callback): ...
