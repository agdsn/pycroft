[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

# PROJECT METADATA
[project]
name = "pycroft"
version = "0.1.0"
authors = [{name = "The Pycroft Authors"}]
license = {text = "Apache Software License"}
description = "AG DSN user management software"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
]
urls = {Homepage = "http://github.com/agdsn/pycroft/"}
requires-python = ">= 3.11"
dependencies = [
    "aiohttp >= 3.9.4",  # security pin; transitive from mac-vendor-lookup
    "alembic ~= 1.9.2",
    "babel >= 2.12.1",
    "blinker ~= 1.4",
    "celery ~= 5.2.1",
    "Click ~= 8.0",
    "email-validator ~= 1.1.1",
    "fints ~= 3.1.0",
    "Flask ~= 3.0.3",
    "Flask-Babel ~= 4.0.0",
    "Flask-Login ~= 0.6.2",
    "Flask-RESTful ~= 0.3.7",
    "Flask-WTF ~= 1.1.1",
    "GitPython ~= 3.1.43",
    "netaddr ~= 1.3.0",
    "Jinja2 ~= 3.1.4",
    "jsonschema ~= 3.2.0",
    "ldap3 ~= 2.5.1",  # only needed for ldap caching
    "mac-vendor-lookup ~= 0.1.11",
    "MarkupSafe ~= 2.0",
    "marshmallow ~= 3.20.1",
    "mt-940 ~= 4.19.0",
    "passlib ~= 1.7.1",
    "psycopg2-binary ~= 2.9.4",
    "pydantic ~= 2.4.0",
    "python-dotenv ~= 0.21.0",
    "reportlab ~= 3.6.13",  # usersheet generation
    "sentry-sdk[Flask] ~= 1.29.2",
    "simplejson ~= 3.11.1",  # decimal serialization
    "SQLAlchemy >= 2.0.1",
    "webargs ~= 8.3.0",
    "wrapt ~= 1.16.0",
    "WTForms ~= 2.3.3",
    "wtforms-widgets",  # note: use `pip install -e deps/wtforms-widgets` for development
]

[project.optional-dependencies]
prod = [
    "uwsgi ~= 2.0.21",
    "uwsgitop ~= 0.11",
]
schemadisplay = [
    "sqlalchemy-schemadisplay @ git+https://github.com/lukasjuhrich/sqlalchemy_schemadisplay.git@master",
]
dev = [
    "celery-types ~= 0.9.3",
    "coverage ~= 6.5.0",
    "factory-boy ~= 3.2.0",
    "Flask-Testing ~= 0.8.1",
    "guzzle-sphinx-theme @ git+https://github.com/agdsn/guzzle_sphinx_theme.git@977d49fcbdf2b3df9660d813d4b33369391923e1",
    "mypy ~= 1.8.0",
    "pydot ~= 1.4.1",
    "pyinstrument ~= 4.2.0",
    "pytest ~= 7.0.0",
    "pytest-cov ~= 4.0.0",
    "pytest-timeout ~= 2.1.0",
    # required for pycharm „run with coverage“ reporting
    "ruff ~= 0.3.2",
    "sphinx ~= 7.3.7",
    "sphinx-autobuild ~= 2021.3.14",
    "sphinx-toolbox ~= 3.7.0",
    "sphinxcontrib-fulltoc ~= 1.2.0",
    "sphinxcontrib-httpdomain ~= 1.8.0",
    "sphinxcontrib-mermaid ~= 0.9.2",
    "sphinx-paramlinks ~= 0.6.0",
    "types-jsonschema ~= 4.3.0",
    "types-netaddr ~= 1.3.0",
    "types-passlib ~= 1.7.7",
    "watchdog ~= 2.3.1",
]

[project.scripts]
pycroft = "flask.cli:main"
pycroft_ldap_sync = "ldap_sync.__main__:main"

[project.entry-points."flask.commands"]
alembic = "scripts.alembic_wrapper:cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = {namespaces = false}

# TOOLS
[tool.black]
line-length = 100

[tool.mypy]
exclude = "deps/.*/build"
plugins = "sqlalchemy.ext.mypy.plugin"
python_version = "3.11"
follow_imports = "silent"
ignore_missing_imports = true
# this list shall slowly grow until it covers the whole codebase.
files = [
    "pycroft/helpers",
    "pycroft/lib",
    "pycroft/external_services",
    "ldap_sync",
    "web",
]
mypy_path = "stubs"
namespace_packages = true

# global rules
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
no_strict_optional = true

# stricter rules
[[tool.mypy.overrides]]
module = [
    "ldap_sync",
    "ldap_sync.*",
    "pycroft.lib",
    "pycroft.lib.*",
    "pycroft.external_services",
    "pycroft.external_services.*",
    "pycroft.helpers",
    "pycroft.helpers.date",
    "pycroft.helpers.errorcode",
    "pycroft.helpers.facilities",
    "pycroft.helpers.i18n",
    "pycroft.helpers.i18n.babel",
    #"pycroft.helpers.interval",
    "pycroft.helpers.net",
    "pycroft.helpers.printing",
    "pycroft.helpers.task",
    "pycroft.helpers.user",
    "pycroft.helpers.utc",
    "web",
    "web.*",
]
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_globals = true

[[tool.mypy.overrides]]
module = [
    "pycroft.lib.finance",
]
strict_optional = true

[tool.pytest.ini_options]
addopts = "--tb=short --no-header"
markers = [
    "slow: slow test (e.g. testing a timeout)",
    "meta: meta test (e.g. testing validity/consistency of fixtures)",
    "hades_logs: tests touching the hades logs, i.e. requiring the `dummy_worker`",
]
filterwarnings = [
    # fixed in kombu v5.3: https://github.com/celery/kombu/issues/1339
    "ignore::DeprecationWarning:kombu.utils.compat",
    # actually caused by reportlab.
    "ignore:.*load_module.*:DeprecationWarning:importlib._bootstrap",
    # fixed in v1.1.2 (unreleased):
    # https://github.com/wtforms/flask-wtf/blob/main/docs/changes.rst#version-112
    "ignore::DeprecationWarning:flask_wtf.recaptcha.widgets",
    # fixed once this PR goes through: https://github.com/python-babel/flask-babel/pull/230
    "ignore:'locked_cached_property' is deprecated:DeprecationWarning:flask_babel",
    "ignore:pkg_resources is deprecated:DeprecationWarning:passlib",

    # TODO this probably comes from the `sphinxcontrib` packages.
    # however, e.g. `sphinxcontrib-fulltoc` is unmaintained (last commit 2017).
    # we probably need to start forking before updating to py3.12.
    # "error:.*Deprecated call.*:DeprecationWarning:",
]
timeout = "10"

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
    "deps/",
    "doc/",
]
[tool.ruff.lint]
# to look up the meaning of specific rule IDs, use `ruff rule $id`
select = [
    "E",
    "F",
    "B",  # flake8-bugbear
]
ignore = [
    "E741",  # ambiguous variable names
    "E501",  # line length violations (for now)
]
unfixable = [
    "B",  # fixing bug hazards requires knowledge about the intention

    # We don't want to autofix these: when using `== True|False|None`
    # in a sqlalchemy expression, the `is` would actually _not_ be correct!
    # the correct workaround is to use the `.is_` / `.is_not` functions
    # (or, in the case of bools, don't do a comparison at all or use negation)
    "E711",  # comparison to None
    "E712",  # comparison to True/False
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"pycroft/model/_all.py" = ["F403"]
"helpers/interactive.py" = ["F403"]
"**/*.pyi" = ["F811"]
