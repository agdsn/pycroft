name: Pycroft CI

on:
  push:
    branches: [ master, develop ]
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - uses: pre-commit/action@v3.0.0
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out pycroft and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: print information about pip cache
        run: pip cache info && pip cache list
      - name: ensure presence of `wheel`
        run: pip install wheel
      - name: install pip dependencies
        run: pip install -r requirements.txt -r requirements.dev.txt
        id: pip-install
      # now come the tests
      - name: Execute ruff
        run: ruff check --format=github .
        if: success() || steps.pip-install.conclusion == 'success'
      - name: Execute mypy
        run: ./scripts/run_mypy.sh
        if: success() || steps.pip-install.conclusion == 'success'
      # docs stuff
      - name: Build sphinx docs
        run: make SPHINXOPTS="-EN -w sphinx.log" -C doc html
        if: success() || steps.pip-install.conclusion == 'success'
      - name: Render sphinx warnings as annotations
        run: python ./scripts/render_sphinx_log.py doc/sphinx.log
        if: success() || steps.pip-install.conclusion == 'success'
      - name: Publish sphinx docs as pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: doc/_build/html
  # see https://github.com/actions/deploy-pages#usage
  deploy-docs:
    if: (github.event_name == 'push') && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    # Add a dependency to the build job
    needs: python-lint
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write  # to deploy to Pages
      id-token: write  # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment. see
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    # for general information abotu environments.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy sphinx docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  npm-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - run: npm ci
    - run: npm run build
    - name: Check for outdated NPM packages
      run: |
        (npm outdated --json | tee outdated.json) || [[ $? == 1 ]]
        python ./scripts/render_outdated.py outdated.json >> "${GITHUB_STEP_SUMMARY}"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
           submodules: 'true'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.10.0
      - name: Fix permissions
        run: sudo chmod -R a+rw .
      - name: print buildx definition
        run: docker buildx bake --print
      - name: Build the Docker image
        run: docker buildx bake --load
      - name: Login to GitLab Registry
        uses: docker/login-action@v1
        with:
          registry: registry.agdsn.de
          username: "github-actions"
          password: ${{ secrets.GITLAB_REGISTRY_PASSWORD }}
      - name: Tag built image
        run: docker tag agdsn/pycroft-prod:latest registry.agdsn.de/agdsn/coreos/pycroft/pycroft:${GITHUB_REF##*/}
      - name: Push to GitLab registry
        run: docker push registry.agdsn.de/agdsn/coreos/pycroft/pycroft:${GITHUB_REF##*/}
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
           submodules: 'true'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.10.0
      - name: Fix permissions
        run: sudo chmod -R a+rw .
      - name: print buildx definition
        run: docker buildx bake --print
      - name: Build
        run: docker buildx bake --load
      - name: Run test-app entrypoints
        run: docker-compose -f docker-compose.test.yml run --rm --no-deps test-app
      - name: Start
        run: docker-compose -f docker-compose.test.yml up test-app
      - name: Run webpack
        run: docker-compose -f docker-compose.test.yml run --rm test-app webpack --mode production
      - name: Run tests
        run: >
          docker-compose -f docker-compose.test.yml run --rm test-app
          test -m "not legacy"
          --junitxml=junit/test-results.xml
          --cov=pycroft --cov=web --cov=ldap_sync --cov=hades_logs --cov-append --cov-report html
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'junit/test-*.xml'
      - name: Publish coverage HTML report as artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: htmlcov
