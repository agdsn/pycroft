"""Add tasks

Revision ID: 305a51819d48
Revises: ff0dbccdf410
Create Date: 2019-05-24 09:38:15.831712

"""
from alembic import op
import sqlalchemy as sa
import pycroft
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '305a51819d48'
down_revision = 'ff0dbccdf410'
branch_labels = None
depends_on = None

task_type = sa.Enum('USER_MOVE_OUT', 'USER_MOVE_IN', 'USER_MOVE', name='tasktype')
task_status = sa.Enum('OPEN', 'EXECUTED', 'FAILED', 'CANCELLED', name='taskstatus')

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.String(length=50), nullable=True),
    sa.Column('type', task_type, nullable=False),
    sa.Column('due', pycroft.model.types.DateTimeTz(), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created', pycroft.model.types.DateTimeTz(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('status', task_status, nullable=False),
    sa.Column('errors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_log_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['log_entry.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_log_entry_task_id'), 'task_log_entry', ['task_id'], unique=False)
    op.create_table('user_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['task.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    _property = sa.table('property', sa.column('name', sa.String))

    op.execute(_property.update().where(
        _property.c.name == op.inline_literal('user_hosts_change'))
               .values({'name': op.inline_literal('hosts_change')}))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_task')
    op.drop_index(op.f('ix_task_log_entry_task_id'), table_name='task_log_entry')
    op.drop_table('task_log_entry')
    op.drop_table('task')
    # ### end Alembic commands ###

    task_type.drop(op.get_bind())
    task_status.drop(op.get_bind())

    _property = sa.table('property', sa.column('name', sa.String))

    op.execute(_property.update().where(
        _property.c.name == op.inline_literal('hosts_change'))
               .values({'name': op.inline_literal('user_hosts_change')}))
