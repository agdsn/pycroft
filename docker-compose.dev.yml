---
services:
  base:
    extends:
      file: docker-compose.base.yml
      service: base
  dev-app:
    extends:
      file: docker-compose.base.yml
      service: dev
    security_opt:
      - "seccomp:unconfined"
    depends_on:
      dev-db:
        condition: service_healthy
      dev-ldap:
        condition: service_healthy
      dev-mq:
        condition: service_healthy
      dev-bundler:
        condition: service_started
    networks:
      dev:
        aliases:
          - app
    ports:
      - "5000:5000"
    command: ["http", "--debug"]
    healthcheck:
      test: curl --fail http://localhost:5000
      interval: 2s
      start_period: 10s
  dev-bundler:
    extends:
      file: docker-compose.base.yml
      service: dev
    command: ["bun", "run", "bundle", "--watch"]
  dev-docs:
    extends:
      file: docker-compose.base.yml
      service: dev
    command: [
      "serve-docs",
      "--watch", "pycroft",
      "--watch", "doc/_static",
      "--watch", "ldap_sync",
      "--watch", "web",
    ]
    healthcheck:
      test: curl --fail http://localhost:8000
    ports:
      - "5001:8000"
  dev-db:
    extends:
      file: docker-compose.base.yml
      service: db
    networks:
      dev:
        aliases:
          - db
    volumes:
      - "db:/var/lib/postgresql"
    ports:
    - "55432:5432"
  dev-ldap:
    extends:
      file: docker-compose.base.yml
      service: ldap
    networks:
      dev:
        aliases:
          - ldap
    volumes:
      - "ldap:/var/lib/ldap"
  dev-mq:
    extends:
      file: docker-compose.base.yml
      service: mq
    networks:
      dev:
        aliases:
          - mq
    volumes:
      - "mq:/var/lib/rabbitmq"
    ports:
      - "15672:15672"
  dev-celery-worker:
    extends:
      file: docker-compose.base.yml
      service: dev
    depends_on:
      dev-db:
        condition: service_healthy
      dev-mq:
        condition: service_healthy
    networks:
      dev:
        aliases:
          - celery-worker
    command: "worker"
    healthcheck:
      test: "/opt/pycroft/venv/bin/celery -A pycroft.task inspect ping"
  dev-dummy-worker:
    extends:
      file: docker-compose.base.yml
      service: dev
    command: "dummy-worker worker --loglevel=debug"
    healthcheck:
      test: "PYTHONPATH=/opt/pycroft/app /opt/pycroft/venv/bin/celery -A helpers.dummy_celery_worker inspect ping"
    environment:
      - TEST_HADES_BROKER_URI=amqp://celery:celery@mq:5672/
      - TEST_HADES_RESULT_BACKEND_URI=rpc://celery:celery@mq:5672/
    depends_on:
      dev-mq:
        condition:
          service_healthy
    networks:
      dev:
        aliases:
          - dummy-worker
  dev-mail:
    extends:
      file: docker-compose.base.yml
      service: mail
    networks:
      dev:
        aliases:
          - mail

volumes:
  home:
  db:
  ldap:
  mq:

networks:
  dev:
